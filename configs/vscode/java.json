{
  //LOCATION:/Users/sid/Library/Application Support/Code/User/snippets

  // Place your snippets for java here. Each snippet is defined under a snippet name and has a prefix, body and
  // description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
  // same ids are connected.
  // Example:
  // "Print to console": {
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Linked List": {
    "prefix": "ll",
    "body": [
      "\tNode head;\n",
      "\tstatic class Node {",
      "\t\tint data;",
      "\t\tNode next;\n",
      "\t\tNode (int d) {",
      "\t\t\tdata = d;",
      "\t\t\tnext = null;",
      "\t\t}",
      "\t}$0"
    ],
    "description": "Creates a reference for Node class type"
  },
  "Traverse Linked List": {
    "prefix": "llp",
    "body": [
      "void printLL() {",
      "\tNode n = head;",
      "\twhile(n != null) {",
      "\t\tSystem.out.print(n.data);",
      "\t\tn=n.next;",
      "\t\tSystem.out.print(n != null? \"->\":\"\");",
      "\t}",
      "}$0"
    ],
    "description": "Creates a print function to traverse a Linked List"
  },
  "Linked List Append": {
    "prefix": "lla",
    "body": [
      "void append(int x) {",
      "\tNode temp = new Node(x);",
      "\ttemp.next = null;",
      "\t// base condition",
      "\tif (head == null) {",
      "\t\thead = temp;",
      "\t\treturn;",
      "\t}",
      "\tNode n = head;",
      "\twhile (n.next != null) {",
      "\t\tn = n.next;",
      "\t}",
      "\tn.next = temp;",
      "}$0"
    ],
    "description": "Creates an append function to add nodes to the end of a Linked List"
  }
}
