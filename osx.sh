#!/bin/bash
#################################################################################################################################################
##                                                                   osx.sh                                                                    ##
##                                                          Author: Siddharth Rawat                                                            ##
##                                                     Copyright 2022 sydrawat01/dotfiles                                                      ##
#################################################################################################################################################

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                           INSTALL SCRIPT v2.0                                                           |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
start=$(date +%s)
bold=$(tput bold)
reset=$(tput sgr0)
USER=$(whoami)

sleep 2

# Install cmd line tools IF not installed
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                         Setting up XCode tools                                                          |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
xcode-select -p 1>/dev/null
XCODE=$?
if [ $XCODE -eq 0 ]; then
    printf '‚è≠ Command line developer tools are already installed.\nSkipping...\n\n'
else
    printf ' üì¶ Installing XCode command line developer tools...\nThis may take a while.\n'
    xcode-select --install
    INSTALL=$?
    if [ $INSTALL -eq 0 ]; then
        printf '‚ú® XCode developer tools installed successfully!\n'
    else
        printf 'üí© Oops! Something went wrong while installing XCode developer tools.\n'
    fi
fi

# Install homebrew IF not installed
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                          Installing homebrew                                                            |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
BREW=$(which brew)
BREW=$?
if [ $BREW -eq 0 ]; then
    printf '‚è≠ Homebrew is already installed.\nSkipping...\n\n'
else
    printf 'üì¶ Installing homebrew...\n'
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    BREW=$?
    if [ $BREW -eq 0 ]; then
        printf '‚ú® Homebrew installed successfully!\n'
        printf '‚öôÔ∏è  Configuring homebrew on your Mac...\n'
        echo '# Set PATH, MANPATH, etc. for Homebrew.' >>/Users/"$USER"/.zprofile
        echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >>/Users/"$USER"/.zprofile
        eval "$(/opt/homebrew/bin/brew shellenv)"
        source /Users/"$USER"/.zprofile
        BREW="$(brew -v)"
        BREW=$?
        if [ $BREW -eq 0 ]; then
            printf "‚öôÔ∏è  Updating homebrew...\nThis may take a while.\n"
            brew update
            printf '‚úî  Done.\n'
        else
            printf 'üí© Oops! Could not find the binaries linked to Homebrew. Try restaring your terminal.\n'
        fi
    else
        printf 'üí© Oops! Something went wrong while installing Homebrew.\n'
    fi
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                         Firefox Developer Ed.                                                           |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo -n "üëæ Do you wish to install Firefox Developer Edition (${bold}y${reset}/${bold}n${reset})? "
read -r firefox

if [ "$firefox" != "${firefox#[Yy]}" ]; then
    printf 'üì¶ Installing Firefox Developer Edition...\n'
    brew install --cask homebrew/cask-versions/firefox-developer-edition
    FIREFOX=$?
    if [ $FIREFOX -eq 0 ]; then
        printf '‚ú® Firefox Developer Edition installed successfully!\n'
    else
        printf 'üí© Oops! Something went wrong while installing Firefox Developer Edition.\n'
    fi
else
    printf '\n‚è≠ Skipping...\n\n'
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                      Google Chrome Developer Ed.                                                        |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo -n "üëæ Do you wish to install Google Chrome Developer Edition (${bold}y${reset}/${bold}n${reset})? "
read -r chrome

if [ "$chrome" != "${chrome#[Yy]}" ]; then
    printf 'üì¶ Installing Google Chrome Developer Edition...\n'
    brew install --cask homebrew/cask-versions/google-chrome-dev
    CHROME=$?
    if [ $CHROME -eq 0 ]; then
        printf '‚ú® Google Chrome Developer Edition installed successfully!\n'
    else
        printf 'üí© Oops! Something went wrong while installing Google Chrome Developer Edition.\n'
    fi
else
    printf '\n‚è≠ Skipping...\n\n'
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                                  iTerm2                                                                 |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo -n "üëæ Do you wish to install iTerm2 (${bold}y${reset}/${bold}n${reset})? "
read -r iterm

if [ "$iterm" != "${iterm#[Yy]}" ]; then
    printf 'üì¶ Installing iTerm2...\n'
    brew install --cask iterm2 
    ITERM=$?
    if [ $ITERM -eq 0 ]; then
        printf '‚ú® iTerm2 installed successfully!\n'
    else
        printf 'üí© Oops! Something went wrong while installing iTerm2.\n'
    fi
else
    printf '\n‚è≠ Skipping...\n\n'
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                                    tmux                                                                 |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo -n "üëæ Do you wish to install tmux(${bold}y${reset}/${bold}n${reset})? "
read -r tmux

if [ "$tmux" != "${tmux#[Yy]}" ]; then
    printf 'üì¶ Installing tmux...\n'
    brew install tmux 
    TMUX=$?
    if [ $TMUX -eq 0 ]; then
        printf '‚ú® tmux installed successfully!\n'
    else
        printf 'üí© Oops! Something went wrong while installing tmux.\n'
    fi
else
    printf '\n‚è≠ Skipping...\n\n'
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                                  neovim                                                                 |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo -n "üëæ Do you wish to install neovim(${bold}y${reset}/${bold}n${reset})? "
read -r neovim

if [ "$neovim" != "${neovim#[Yy]}" ]; then
    printf 'üì¶ Installing neovim...\n'
    brew install neovim
    NVIM=$?
    if [ $NVIM -eq 0 ]; then
        printf '‚ú® neovim installed successfully!\n'
    else
        printf 'üí© Oops! Something went wrong while installing neovim.\n'
    fi
else
    printf '\n‚è≠ Skipping...\n\n'
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                           NVM, NodeJS & NPM                                                             |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo -n "üëæ Do you wish to install Node Version Manager (${bold}y${reset}/${bold}n${reset})? "
read -r node

if [ "$node" != "${node#[Yy]}" ]; then
    printf 'üì¶ Installing Node Version Manager...\n'
    curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
    NVM=$?
    if [ $NVM -eq 0 ]; then
        printf '‚ú® Node Version Manager installed successfully!\n'
        source ~/.zshrc
        NVM=$(command -v nvm)
        NVM=$?
        if [ $NVM -eq 0 ]; then
            printf '‚öôÔ∏è  Configuring NodeJS & NPM on your Mac...\n'
            echo -n "üëæ Do you wish to install the LTS version of NodeJS (${bold}y${reset}/${bold}n${reset})? "
            read -r version
            if [ "$version" != "${version#[Yy]}" ]; then
                printf 'üì¶ Installing LTS version of NodeJS...\n'
                nvm install --lts
                printf "‚öôÔ∏è  Configuring NodeJS...\n."
                nvm use --lts
                echo "node $(node --version)"
                echo "npm $(npm --version)"
                printf '‚úî  Done.\n'
            else
                printf 'üì¶ Installing LTS version of NodeJS...\n'
                nvm install node
                printf "‚öôÔ∏è  Configuring NodeJS...\n."
                nvm use node
                echo "node $(node --version)"
                echo "npm $(npm --version)"
                printf '‚úî  Done.\n'
            fi
        else
            printf 'üí© Oops! Could not find the binaries linked to NVM. Try restarting your terminal.\n'
        fi
    else
        printf 'üí© Oops! Something went wrong while installing Node Version Manager.\n'
    fi
else
    printf '\n‚è≠ Skipping...\n\n'
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                         Yarn Package Manager                                                            |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo -n "üëæ Do you wish to install Yarn Package Manager (${bold}y${reset}/${bold}n${reset})? "
read -r yarn

if [ "$yarn" != "${yarn#[Yy]}" ]; then
    printf 'üì¶ Installing Yarn Package Manager...\n'
    brew install yarn
    YARN=$?
    if [ $YARN -eq 0 ]; then
        printf '‚ú® Node Version Manager installed successfully!\n'
    else
        printf 'üí© Oops! Something went wrong while installing Yarn Package Manager.\n'
    fi
else
    printf '\n‚è≠ Skipping...\n\n'
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                               Postman                                                                   |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo -n "üëæ Do you wish to install Postman (${bold}y${reset}/${bold}n${reset})? "
read -r postman

if [ "$postman" != "${postman#[Yy]}" ]; then
    printf 'üì¶ Installing Postman...\n'
    brew install --cask postman
    POSTMAN=$?
    if [ $POSTMAN -eq 0 ]; then
        printf '‚ú® Postman installed successfully!\n'
    else
        printf 'üí© Oops! Something went wrong while installing Postman.\n'
    fi
else
    printf '\n‚è≠ Skipping...\n\n'
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                                VSCode                                                                   |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo -n "Do you wish to install VSCode (${bold}y${reset}/${bold}n${reset})? "
read -r vscode

if [ "$vscode" != "${vscode#[Yy]}" ]; then
    printf 'üì¶ Installing VSCode...\n'
    brew install --cask visual-studio-code
    VSC=$?
    if [ $VSC -eq 0 ]; then
        printf '‚ú® VSCode installed successfully!\n'
        printf "‚öôÔ∏è  Configuring VSCode...\n."
        cat ./configs/vscode/extensions.txt | xargs -L 1 code --install-extension
        VSC=$?
        if [ $VSC -eq 0 ]; then
            cp ./configs/vscode/settings.json "$HOME"/Library/Application\ Support/Code/User/
            VSC=$?
            if [ $VSC -eq 0 ]; then
                printf '‚úî  Done.\n'
            else
                printf 'üí© Oops! Couldn'\''t configure VSCode settings.\nTry manually copy the settings.json file from configs/vscode folder?\n'
            fi
        else
            printf 'üí© Oops! Something went wrong while installing VSCode extensions.\n'
        fi
    else
        printf 'üí© Oops! Something went wrong while installing VSCode.\n'
    fi
else
    printf '\n‚è≠ Skipping...\n\n'
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                              Oh-My-Zsh                                                                  |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo -n "üëæ Do you wish to install oh-my-zsh(${bold}y${reset}/${bold}n${reset})? "
read -r omz

if [ "$omz" != "${omz#[Yy]}" ]; then
    printf 'üì¶ Installing oh-my-zsh...\n'
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
    OMZ=$?
    if [ $OMZ -eq 0 ]; then
        printf '‚ú® oh-my-zsh installed successfully!\n'
    else
        printf 'üí© Oops! Something went wrong while installing oh-my-zsh.\n'
    fi
else
    printf '\n‚è≠ Skipping...\n\n'
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                            Hyper Terminal                                                               |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo -n "üëæ Do you wish to install Hyper(${bold}y${reset}/${bold}n${reset})? "
read -r hyper

if [ "$hyper" != "${hyper#[Yy]}" ]; then
    printf 'üì¶ Installing Hyper...\n'
    brew install --cask hyper
    HYPER=$?
    if [ $HYPER -eq 0 ]; then
        printf '‚ú® Hyper installed successfully!\n'
        printf "‚öôÔ∏è  Configuring Hyper Terminal...\n."
        cp ./configs/hyper/.hyper.js ~/
    else
        printf 'üí© Oops! Something went wrong while installing Hyper.\n'
    fi
else
    printf '\n‚è≠ Skipping...\n\n'
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                                Slack                                                                    |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo -n "üëæ Do you wish to install Slack (${bold}y${reset}/${bold}n${reset})? "
read -r slack

if [ "$slack" != "${slack#[Yy]}" ]; then
    printf 'üì¶ Installing Slack...\n'
    brew install --cask slack
    SLACK=$?
    if [ $SLACK -eq 0 ]; then
        printf '‚ú® Slack installed successfully!\n'
    else
        printf 'üí© Oops! Something went wrong while installing Slack.\n'
    fi
else
    printf '\n‚è≠ Skipping...\n\n'
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                                 Zoom                                                                    |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo -n "üëæ Do you wish to install Zoom (${bold}y${reset}/${bold}n${reset})? "
read -r zoom

if [ "$zoom" != "${zoom#[Yy]}" ]; then
    printf 'üì¶ Installing Zoom...\n'
    brew install --cask zoom
    ZOOM=$?
    if [ $ZOOM -eq 0 ]; then
        printf '‚ú® Zoom installed successfully!\n'
    else
        printf 'üí© Oops! Something went wrong while installing Zoom.\n'
    fi
else
    printf '\n‚è≠ Skipping...\n\n'
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                              Bitwarden                                                                  |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo -n "üëæ Do you wish to install Bitwarden (${bold}y${reset}/${bold}n${reset})? "
read -r bitwarden

if [ "$bitwarden" != "${bitwarden#[Yy]}" ]; then
    printf 'üì¶ Installing Bitwarden...\n'
    brew install --cask bitwarden
    BIT=$?
    if [ $BIT -eq 0 ]; then
        printf '‚ú® Bitwarden installed successfully!\n'
    else
        printf 'üí© Oops! Something went wrong while installing Bitwarden.\n'
    fi
else
    printf '\n‚è≠ Skipping...\n\n'
fi

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                      Miscellaneous Configurations                                                       |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
printf "‚öôÔ∏è  Configuring git VCS...\n."
cp ./git/.gitconfig ~/
GIT=$?
if [ $GIT -eq 0 ]; then
    cp ./git/.gitmessage ~/
    GIT=$?
    if [ $GIT -eq 0 ]; then
        printf '‚úî  Git configuration done.\n'
        printf 'üîë To setup SSH keys for GitHub, refer here: https://docs.github.com/en/authentication/connecting-to-github-with-ssh/about-ssh \n'
        printf 'üîê Remember to enable 2FA to keep your accounts secure!\n'
    fi
else
    printf '‚ùå  Error occurred while configuring git VCS\n'
fi

printf "‚öôÔ∏è  Configuring Vim...\n."
cp ./configs/vim/.vimrc ~/
VIM=$?
if [ $VIM -eq 0 ]; then
    printf '‚úî  Vim configuration done.\n'
else
    printf '‚ùå  Error occurred while configuring Vim\n'
fi

printf "‚öôÔ∏è  Configuring Dracula Terminal theme...\n."
brew tap dracula/install
TERM=$?
if [ $TERM -eq 0 ]; then
    brew install --cask dracula-terminal
    TERM=$?
    if [ $TERM -eq 0 ]; then
        printf '‚úî  Dracula theme successfully installed.\n'
        printf 'Don'\''t forget to open the terminal app settings to set the dracula theme as the default theme!\n'
        printf 'Also while we have you here, a good window size is 140x40 with Roboto Mono Light for Powerline font, size 12\n'
    fi
else
    printf '‚ùå  Error occurred while configuring Dracula Terminal theme\n'
fi

printf '‚ö†Ô∏è  Please note /runcom settings are not being installed, as they might differ.\n'
printf 'The settings for sydrawat01/dotfiles depends on another package called '\''fig'\''\n'
printf 'Make changes to these files at your own risk!\n'

echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
echo "|                                                                                                                                         |"
echo "|                                                     Performing Homebrew Cleanup                                                         |"
echo "|                                                                                                                                         |"
echo "+-----------------------------------------------------------------------------------------------------------------------------------------+"
brew cleanup
BRWCLNP=$?
if [ $BRWCLNP -eq 0 ]; then
    printf '‚úî  Cleanup complete.\n'
else
    printf '‚ùå  Error occurred while performing brew cleanup\n'
fi

runtime=$((($(date +%s) - start) / 60))
printf 'Setup completed in %s minutes\n' "$runtime"
